#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
ReqTraq Software Low-Level Requirements
\end_layout

\begin_layout Standard
This is a list of low-level software requirements that implement the high-level
 requirements laid out in 0-DDLNâ€“0-SRD.
\end_layout

\begin_layout Section
List Of Requirements
\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-001 Requirements Storage
\end_layout

\begin_layout Standard
Requirements SHALL be stored in Lyx files and version controlled by Git.
 ReqTraq is not responsible for the actual formatting or version control
 of each document.
 Instead ReqTraq leverages Git for storage and version control and Lyx/Latex
 for formatting.
\end_layout

\begin_layout Standard
The git repository and location where each requirement document is stored
 is defined in 0-DDLN-10-DS.
\end_layout

\begin_layout Standard
Reqtraq will parse the Lyx requirement documents in the 
\begin_inset Quotes eld
\end_inset

certdocs
\begin_inset Quotes erd
\end_inset

 directory.
 Each requirement in the lyx file is delimited by a Lyx 
\begin_inset Quotes eld
\end_inset

req:
\begin_inset Quotes erd
\end_inset

 note.
\end_layout

\begin_layout Standard
Rationale: both Git and Lyx are industry standards for formatting and version
 control respectively.
 
\end_layout

\begin_layout Standard
Parents: REQ-0-DDLN-SWH-001
\end_layout

\begin_layout Standard
Verification: Unit test.
\end_layout

\begin_layout Standard
Safety impact: None.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status open

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-014 Acessing and linking to requirements
\end_layout

\begin_layout Standard
Each time a change to a requirement document is commited, ReqTraq SHALL
 parse the document and alter the following information:
\end_layout

\begin_layout Itemize
each requirement described in the document, is wrapped into a 
\series bold
named anchor
\series default
 so that the requirement can be directly linked to, e.g.
 
\end_layout

\begin_layout LyX-Code
<a name=
\begin_inset Quotes erd
\end_inset

#REQ-0-DDLN-SWL-001
\begin_inset Quotes erd
\end_inset

>REQ-0-DDLN-SWL-001</a>
\end_layout

\begin_layout Itemize
each requirement referred to in the document is replaced with a link to
 that requirement.
 For example a reference to the High Level Requirement REQ-0-DDLN-SYS-001
 will look be replaced with:
\end_layout

\begin_layout LyX-Code
<a href=
\begin_inset Quotes erd
\end_inset

https://a/REQ-0-DDLN-SYS-001
\begin_inset Quotes erd
\end_inset

>REQ-0-DDLN-SYS-001</a>
\end_layout

\begin_layout Standard
Where http://a is the Daedalean URL shortener/redirector.
 The URL shortener will infer the name of the document where the requirement
 is defined (0-DDLN-0-SRD) in our case and use the Google Drive Api to find
 the URL of the document, then redirect to it, e.g.:
\end_layout

\begin_layout LyX-Code
<a href=
\begin_inset Quotes erd
\end_inset

https://doc-04-6g-docs.googleusercontent.com/....
\begin_inset Quotes erd
\end_inset

>REQ-0-DDLN-SYS-001</a>
\end_layout

\begin_layout Standard

\series bold
TODO: 
\series default
The url in the example may be a Docs Url instead
\end_layout

\begin_layout Standard
Note that the URL shortener needs to infer the name of the document the
 requirement is defined in, as described in REQ-0-DDLN-SWL-002.
\end_layout

\begin_layout Subsubsection
ReqTraq triggering
\end_layout

\begin_layout Standard
ReqTraq SHALL have a Git server-hook component that automatically triggers
 each time a change to a requirement document is committed.
 ReqTraq will use the following rules to determine if a document is a requiremen
t document
\end_layout

\begin_layout Standard
- the document is a Lyx file
\end_layout

\begin_layout Standard
- the name of the document matches the naming conventions laid out in 0-DDLN-10-
DS: [Project Num]-[Project Abbrev]-[Seq Num]-[Document Type Acronym]
\end_layout

\begin_layout Standard
Rationale: this ensures that all documents defining or reference requirements
 don't introduce typing mistakes.
\end_layout

\begin_layout Standard
Parents: REQ-0-DDLN-SWH-012
\end_layout

\begin_layout Standard
Verification: Unit test.
\end_layout

\begin_layout Standard
Safety impact: None.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-002 Construct the requirement URL.
\end_layout

\begin_layout Standard
The RMT SHALL infer the document where a requirement is defined solely based
 on the name of the requirement.
 This can be uniquely constructed as follows:
\end_layout

\begin_layout Standard
- strip the REQ- prefix from the requirement name
\end_layout

\begin_layout Standard
- take the 2 sections of the requirement name following REQ- (project/system
 number, project/system abbrev, document sequence no), e.g.
 0-DDLN
\end_layout

\begin_layout Standard
- append the sequence number for the document type (e.g.
 1 for ORD, 5 for SDD, etc.) 
\series bold
TODO
\series default
: update once Anna finalizes the sequence numbering
\end_layout

\begin_layout Standard
- if the requirement is low level (SWL or HWL), append -SDD
\end_layout

\begin_layout Standard
- if the requirement is high level (SWH or HWH), append -SRD
\end_layout

\begin_layout Standard
- if the requirement is system level (SYS), append ORD
\end_layout

\begin_layout Standard
Rationale: simplicity and completeness: the ability to find a requirement
 only based on its name simplifies the development and the verification
 process.
\end_layout

\begin_layout Standard
Parents: REQ-0-DDLN-SWH-001
\end_layout

\begin_layout Standard
Verification: Unit test.
\end_layout

\begin_layout Standard
Safety impact: None.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-003 Uniform requirement ID format.
\end_layout

\begin_layout Standard
The RMT SHALL check that the requirements defined in each document have
 a correct id:
\end_layout

\begin_layout Itemize
the first section of the requirement name is 
\begin_inset Quotes eld
\end_inset

REQ-
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
the next 2 sections (sections 2 and 3) of the requirement are identical
 to the first 2 sections of the document (project/system number, project/system
 abbrev), e.g.
 0-DDLN
\end_layout

\begin_layout Itemize
section 4 of the requirement name is:
\end_layout

\begin_deeper
\begin_layout Itemize
SYS for system/overall requirements (defined in ORD documents)
\end_layout

\begin_layout Itemize
SWH for sofware high-level requirements (defined in SRD documents)
\end_layout

\begin_layout Itemize
SWL for software low-level requirements (defined in SDD documents)
\end_layout

\begin_layout Itemize
HWH for hardware high-level requirements (defined in HRD documents)
\end_layout

\begin_layout Itemize
HWL for hardware low-level requirements (defined in HDD documents)
\end_layout

\end_deeper
\begin_layout Itemize
section 5 of the requirement name is a three digit number sequence number
 n such that requirements 0,1,...,n-1 all exist, not necessarily in order
\end_layout

\begin_layout Standard
Rationale: correct ids are essential for tracing requirements.
\end_layout

\begin_layout Standard
Verification: Unit test.
\end_layout

\begin_layout Standard
Safety impact: None.
\end_layout

\begin_layout Standard
Parent: REQ-0-DDLN-SWH-002
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-004 Valid requirement references.
\end_layout

\begin_layout Standard
The RMT SHALL check that the requirements referred to in each document exist
 (and thus have a correct id):
\end_layout

\begin_layout Itemize
for each requirement reference, check if the referenced requirement exists
 in the requirement map constructed as described in REQ-0-DDLN-SWL-015
\end_layout

\begin_layout Standard
Rationale: invalid requirement references indicate an error in the requirement
 construction
\end_layout

\begin_layout Standard
Verification: Unit test.
\end_layout

\begin_layout Standard
Safety impact: None.
\end_layout

\begin_layout Standard
Parent: REQ-0-DDLN-SWH-002
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-005 ID allocation.
\end_layout

\begin_layout Standard
The RMT SHALL check that given a requirement ID with sequence number N,
 all requirements with the same prefix and sequence numbers 0...N-1 exist and
 are defined in the current document (in any order).
 
\end_layout

\begin_layout Standard
Rationale: this helps ensure that no requirements were accidentally skipped.
\end_layout

\begin_layout Standard
Verification: Unit test.
\end_layout

\begin_layout Standard
Safety impact: None.
\end_layout

\begin_layout Standard
Parent: REQ-0-DDLN-SWH-003
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-017 Deleted requirements.
\end_layout

\begin_layout Standard
Deleted requirements are requirements that do not apply anymore (e.g.
 they are obsolete).
 Deleted requirements SHALL be marked by changing the title to 
\begin_inset Quotes eld
\end_inset

Deleted
\begin_inset Quotes erd
\end_inset

, e.g.
\end_layout

\begin_layout Standard

\series bold
REQ-0-DDLN-SWL-015 Deleted 
\end_layout

\begin_layout Standard
Deleted requirements SHALL not be checked for completeness and all the tasks
 associated with them SHALL be closed as WONTFIX.
 All references to a deleted requirement SHALL be marked as errors.
\end_layout

\begin_layout Standard
Rationale: continuous requirement numbering helps ensure that no requirements
 were accidentally skipped and completely deleting requirements would create
 gaps in the numbering.
\end_layout

\begin_layout Standard
Verification: Unit test.
\end_layout

\begin_layout Standard
Safety impact: None.
\end_layout

\begin_layout Standard
Parent: REQ-0-DDLN-SWH-003
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-015 Data structure for keeping requirements and their hierarchy
\end_layout

\begin_layout Standard
The interface between the parsing tool and the report generation tool SHALL
 be a data structure that maps requirement IDs to a requirement structure.
 The requirement structure will hold all the data about the requirement
 that is needed for the report generation (ID, body, attributes, parents,
 children, etc.).
 The data structure is build by traversing the entire git repository and
 parsing all files that may contain requirements (requirement .lyx files
 and .cc/.hh source files).
\end_layout

\begin_layout Standard
Rationale: this data structure will be used for report generation and graph
 verification.
\end_layout

\begin_layout Standard
Verification: Unit test.
\end_layout

\begin_layout Standard
Safety impact: None.
\end_layout

\begin_layout Standard
Parents: REQ-0-DDLN-SWH-004, REQ-0-DDLN-SWH-005 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-006.
 Tracing system to high, low level, implementation, test.
\end_layout

\begin_layout Standard
The RMT SHALL, given a list of requirements given to or generated by the
 project as checked in to the repository, be able to generate parent and
 child requirements and code ordered from system to high level to low level
 requirement to implementation and test, including missing continuations.
 
\end_layout

\begin_layout Subsubsection
Report structure
\end_layout

\begin_layout Standard
The information will be organized as following:
\end_layout

\begin_layout Itemize
SYSTEM_REQUIREMENT_1
\end_layout

\begin_deeper
\begin_layout Itemize
Status: not started/started (% complete)/completed
\end_layout

\begin_layout Itemize
Open issues: <number of open issues>
\end_layout

\begin_layout Itemize
HIGH_LEVEL_REQUIREMENT_1
\end_layout

\begin_deeper
\begin_layout Itemize
Status: not started/started (% complete)/completed
\end_layout

\begin_layout Itemize
Open issues: <number of open issues>
\end_layout

\begin_layout Itemize
LOW_LEVEL_REQUIREMENT_1
\end_layout

\begin_deeper
\begin_layout Itemize
Status: not started/started (% complete)/completed
\end_layout

\begin_layout Itemize
Open issues: enumerate open issue ids
\end_layout

\begin_layout Itemize
Source files: list the source files implementing this requirement
\end_layout

\begin_layout Itemize
Changelists: list of differential requests implementing the requirement
\end_layout

\end_deeper
\begin_layout Itemize
LOW_LEVEL_REQUIREMENT_2
\end_layout

\begin_deeper
\begin_layout Itemize
...
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
HIGH_LEVEL_REQUIREMENT_2
\end_layout

\begin_deeper
\begin_layout Itemize
...
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
SYSTEM_REQUIREMENT_2
\end_layout

\begin_deeper
\begin_layout Itemize
...
\end_layout

\end_deeper
\begin_layout Standard
Note 1: The above list will show 
\begin_inset Quotes eld
\end_inset

denormalized
\begin_inset Quotes erd
\end_inset

 requirements, in the sense that if a rquirement has multiple parents, it
 will be listed under each parent.
 To facilitate readability, only the first time a requirement appears the
 full information will be displayed, otherwise a @see FIRST_PARENT_REQ_ID
 tag will refer to it.
\end_layout

\begin_layout Standard
Note 2: The completion status of SYS, SWH or HWH is:
\end_layout

\begin_layout Itemize
not started if none of the children are started
\end_layout

\begin_layout Itemize
started if at least one child is started
\end_layout

\begin_layout Itemize
completed if *all* children are completed
\end_layout

\begin_layout Standard
Rationale: the report will be used by the certification authority to visualize
 requirement tracing.
\end_layout

\begin_layout Standard
Parents: REQ-0-DDLN-SWH-004, REQ-0-DDLN-SWH-007
\end_layout

\begin_layout Standard
Verification: Test.
\end_layout

\begin_layout Standard
Safety Impact: None.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-007.
 Tracing implementation, test to low, high, system level.
\end_layout

\begin_layout Standard
The RMT SHALL, given a list of requirements given to or generated by the
 project as checked in to the repository be able to generate parent and
 child requirements and code, ordered from implementation or test to low
 level, high level to system requirement, including missing continuations.
\end_layout

\begin_layout Standard
This is identical to REQ-0-DDLN-SWL-006, except that the report is generated
 in reverse order.
\end_layout

\begin_layout Standard
Rationale: the report will be used by the certification authority to visualize
 requirement tracing.
\end_layout

\begin_layout Standard
Parent: REQ-0-DDLN-SWH-005
\end_layout

\begin_layout Standard
Verification: Test.
\end_layout

\begin_layout Standard
Safety Impact: None.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-008.
 Change impact tracing
\end_layout

\begin_layout Standard
The RMT SHALL be able to generate a list of all requirements changed between
 checked in versions of the project's documentation, for use as input to
 the high-to-low and low-to-high tracing functions.
\end_layout

\begin_layout Standard
The report generation described in REQ-0-DDLN-SWL-006 will be able to receive
 the following inputs:
\end_layout

\begin_layout Itemize
no input: in this case ReqTraq will generate a global HTML (TODO: other
 formats?) report listing all the requirements from system to high level
 to low level defined in the project associated with the repository (each
 project has its own Git repository)
\end_layout

\begin_layout Itemize
a list of requirement ids (system, high level or low level): in this case
 the report will be generated for the given requirements, plus all their
 direct/indirect children.
 The direct/indirect parent requirements will also be listed, but all children
 other than the ones requested will be ommitted.
\end_layout

\begin_layout Itemize
two git commit ids (160-bit SHA-1 hash): in this case the report will contain
 all requirements that were changed between the given commits.
 If the 2nd commit id is missing, HEAD (last available commit) is assumed
\end_layout

\begin_layout Standard
Suggested usage (the directory in which reqtraq is run determines the project
 for which the report is generated):
\end_layout

\begin_layout LyX-Code
reqtraq report 
\end_layout

\begin_layout LyX-Code
reqtraq report REQ-0-DDLN-SWL-008,REQ-0-DDLN-SWL-009,REQ-0-DDLN-SWL-010
\end_layout

\begin_layout LyX-Code
reqtraq report d6cd1e2bd19e03a81132a23b2025920577f84e37
\end_layout

\begin_layout Standard
Note: a requirement is considered 
\begin_inset Quotes eld
\end_inset

changed
\begin_inset Quotes erd
\end_inset

 if either it was directly edited or one of the child requirements was edited.
\end_layout

\begin_layout Standard
Rationale: the report will be used by the certification authority to visualize
 requirements that changed within a period of time.
\end_layout

\begin_layout Standard
Parents: REQ-0-DDLN-SWH-006
\end_layout

\begin_layout Standard
Verification: Test.
\end_layout

\begin_layout Standard
Safety Impact: None.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-018 Phabricator export
\end_layout

\begin_layout Standard
The RMT SHALL export all requirements as Phabricator tasks, in the following
 format:
\end_layout

\begin_layout Itemize
Title: requirement title, e.g.
 
\begin_inset Quotes eld
\end_inset

REQ-0-DDLN-SWL-018 Phabricator export
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Assigned To: empty
\end_layout

\begin_layout Itemize
Status: Open
\end_layout

\begin_layout Itemize
Priority: Normal
\end_layout

\begin_layout Itemize
Description: The requirement description
\end_layout

\begin_layout Itemize
Tags: Project code (e.g.
 DDLN in this case)
\end_layout

\begin_layout Itemize
Subscribers: empty
\end_layout

\begin_layout Itemize
Parents : the parent requirements
\end_layout

\begin_layout Itemize
Children: the child requirements
\end_layout

\begin_layout Standard
If a task with the given requirement id already exists, then RMT will update
 the title, description and parents of the task, but all other fields will
 be left unchanged.
\end_layout

\begin_layout Standard
If a task's title changes to 
\begin_inset Quotes eld
\end_inset

Deleted
\begin_inset Quotes erd
\end_inset

 it's associated task and all its children will be marked as WONTFIX.
\end_layout

\begin_layout Standard
Parents: REQ-0-DDLN-SWH-006
\end_layout

\begin_layout Standard
Verification: Test
\end_layout

\begin_layout Standard
Safety Impact: None.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-009.
 Change history tracing
\end_layout

\begin_layout Standard
The RMT MUST be able to generate a list of all changelists that touched
 the definition or implementation of a given set of requirements, and the
 corresponding Problem Reports that these changelists belong to.
 
\end_layout

\begin_layout Standard
The report described in REQ-0-DDLN-SWL-006 addresses this requirement.
 Each LLR will contain both the source files that implement it and the CLs
 that implemented it.
\end_layout

\begin_layout Standard
Parents: REQ-0-DDLN-SWH-007
\end_layout

\begin_layout Standard
Verification: Test.
\end_layout

\begin_layout Standard
Safety Impact: None.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-010.
 Change justification tracing
\end_layout

\begin_layout Standard
The RMT SHALL verify and flag violations that changelists touching definitions
 or implementation of a requirement have a rationale-for-change field.
 
\end_layout

\begin_layout Standard
The current workflow forces each changelist to have a description and an
 associated task/problem report.
 The changelist description can be viewed as the rationale-for-change.
\end_layout

\begin_layout Standard
Rationale: no changes should be allowed unless they were vetted and the
 justification accepted by an independent reviewer.
\end_layout

\begin_layout Standard
Parents: REQ-0-DDLN-SWH-008
\end_layout

\begin_layout Standard
Verification: Test.
\end_layout

\begin_layout Standard
Safety Impact: None
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-011.
 Report readability.
\end_layout

\begin_layout Standard
The formats supported by RMT will be HTML and PDF, using the following syntax:
\end_layout

\begin_layout LyX-Code
reqtraq report --format pdf
\end_layout

\begin_layout LyX-Code
reqtraq report --format html
\end_layout

\begin_layout Standard
Rationale: reports on the bidirectional traceability have to be submitted
 as evidence in certification trajectories.
 The report generated in REQ-0-DDLN-SWL-006 addresses this issue.
\end_layout

\begin_layout Standard
Parents: REQ-0-DDLN-SWH-009
\end_layout

\begin_layout Standard
Verification: Demonstration.
\end_layout

\begin_layout Standard
Safety Impact: None
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-012.
 Filtering of output
\end_layout

\begin_layout Standard
The report generation tool SHALL allow filtering by matching a regular expressio
n against:
\end_layout

\begin_layout Itemize
requirement id
\end_layout

\begin_layout Itemize
requirement title
\end_layout

\begin_layout Itemize
requirement description/body
\end_layout

\begin_layout Standard
Suggested usage:
\end_layout

\begin_layout LyX-Code
reqtraq report --title_filter=
\begin_inset Quotes erd
\end_inset

Motion estimation
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout LyX-Code
reqtraq report --id_filter=
\begin_inset Quotes erd
\end_inset

REQ-0-DDLN-SWL-.*
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout LyX-Code
reqtraq report --body_filter=
\begin_inset Quotes erd
\end_inset

reprojection error
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Rationale: useful in the development or verification phase to check a subset
 of requirements.
\end_layout

\begin_layout Standard
Parents: REQ-0-DDLN-SWH-010
\end_layout

\begin_layout Standard
Verification: Demonstration.
\end_layout

\begin_layout Standard
Safety Impact: None
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-016 Web interface
\end_layout

\begin_layout Standard
The RMT tool SHALL support starting up a simple web interface for report
 generation.
 The syntax for starting up the web interface will be:
\end_layout

\begin_layout LyX-Code
reqtraq web <port>
\end_layout

\begin_layout Standard
The command must be executed in the repository for which the reports will
 be generated.
 
\end_layout

\begin_layout Standard
Rationale: useful for report navigation and easy report generation.
\end_layout

\begin_layout Standard
Parents: REQ-0-DDLN-SWH-013
\end_layout

\begin_layout Standard
Verification: Demonstration.
\end_layout

\begin_layout Standard
Safety Impact: None
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status open

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-013 Requirement attributes
\end_layout

\begin_layout Standard
The RMT SHALL be able to store a number of predefined attributes and enforce/fla
g mandatory/optional rules for them.
\end_layout

\begin_layout Standard
The attributes of each requirement MUST appear at the end of the requirement
 definition, one per line.
\end_layout

\begin_layout Standard
Attributes can be optional or mandatory.
 Each attribute has a name.
 Each attribute may have an associated regular expression to test for validity.
 Attributes are specified in a attributes.json file in the certdocs directory.
 For example, the attributes.json for the current document would be:
\end_layout

\begin_layout LyX-Code
{ "attributes": [
\end_layout

\begin_layout LyX-Code
  { "name": "Parent", "optional": false }, 
\end_layout

\begin_layout LyX-Code
  { "name": "Verification", "value": "(Demonstration|Unit Test)", "optional":
 false } 
\end_layout

\begin_layout LyX-Code
  { "name": "Safety Impact", "optional": false } ] }
\end_layout

\begin_layout Standard
Rationale: Attributes help define the importance of and the verification
 process for each requirement.
 Missing attributes indicate an incomplete requirement.
\end_layout

\begin_layout Standard
Parents: REQ-0-DDLN-SWH-011
\end_layout

\begin_layout Standard
Verification: Demonstration.
\end_layout

\begin_layout Standard
Safety Impact: None
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Note Note
status open

\begin_layout Plain Layout
req:
\end_layout

\end_inset

REQ-0-DDLN-SWL-019 Requirement attributes
\end_layout

\begin_layout Standard
The RMT SHALL be able to store a number of predefined attributes and enforce/fla
g mandatory/optional rules for them.
\end_layout

\begin_layout Standard
The attributes of each requirement MUST appear at the end of the requirement
 definition, one per line.
\end_layout

\begin_layout Standard
Attributes can be optional or mandatory.
 Each attribute has a name.
 Each attribute may have an associated regular expression to test for validity.
 Attributes are specified in a attributes.json file in the certdocs directory.
 For example, the attributes.json for the current document would be:
\end_layout

\begin_layout LyX-Code
{ "attributes": [
\end_layout

\begin_layout LyX-Code
  { "name": "Parent", "optional": false }, 
\end_layout

\begin_layout LyX-Code
  { "name": "Verification", "value": "(Demonstration|Unit Test)", "optional":
 false } 
\end_layout

\begin_layout LyX-Code
  { "name": "Safety Impact", "optional": false } ] }
\end_layout

\begin_layout Standard
Rationale: Attributes help define the importance of and the verification
 process for each requirement.
 Missing attributes indicate an incomplete requirement.
\end_layout

\begin_layout Standard
Parents: REQ-0-DDLN-SWH-011
\end_layout

\begin_layout Standard
Verification: Demonstration.
\end_layout

\begin_layout Standard
Safety Impact: None
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
/req
\end_layout

\end_inset


\end_layout

\end_body
\end_document
